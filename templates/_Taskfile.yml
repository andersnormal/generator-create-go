version: '2'

vars:
  VERSION:
    sh: grep "const Version " version.go | sed -E 's/.*"(.+)"$$/\1/'

  BIN:
    sh: basename "$PWD"

tasks:
  default:
    cmds:
      - task: run

  run:
    desc: Run the glorious app.
    cmds:
      - task: build
      - ./bin/{{.BIN}}{{exeExt}}

  clean:
    desc: Cleanup the build artifacts.
    cmds:
      - echo "Cleaning ..."
      - rm -rf bin/ *.html *.out | exit 0;

  install:
    desc: Install all dependencies.
    cmds:
      - echo "Installing Dependencies ..."
      - go get -u github.com/tcnksm/ghr
      - go get -u github.com/mitchellh/gox
      - go get -u github.com/golang/dep/cmd/dep
      - go get -u gopkg.in/alecthomas/gometalinter.v2

  test:
    desc: Run all the go tests.
    cmds:
      - go test -v -race ./...

  cov:
    desc: Generate test converage.
    cmds:
      - go test -v -cover -coverprofile=c.out
      - go tool cover -html=c.out -o coverage.html

  vet:
    desc: Reports suspicious code.
    cmds:
      - go vet ./...

  build:
    desc: Run all the go tests.
    sources:
      - ./*.go
    generates:
      - bin/*.{{exeExt}}
    cmds:
      - echo "Building ({{.BIN}}) ..."
      - mkdir -p ./bin
      - gox -output "bin/{{.BIN}}_{{.VERSION}}_{{{OS}}}}_{{{{ARCH}}}}" -os="linux" -os="darwin" -arch="386" -arch="amd64" ./
      - go build -i -o bin/{{.BIN}}
    status:
      - test -d bin
    method: checksum

  docker:
    desc: Build docker.
    deps: [release]
    cmds:
      - docker build --build-arg BIN=bin/{{}} -t {{.BIN}}:latest .

  release:
    desc: Release the glorious app.
    deps: [clean, test, cov]
    cmds:
      - task: build
